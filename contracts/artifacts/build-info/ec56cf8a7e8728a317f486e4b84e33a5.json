{
	"id": "ec56cf8a7e8728a317f486e4b84e33a5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FungusFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.12;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract FungusFactory {\r\n\r\n\r\n    uint dnaDigits = 14;\r\n    uint dnaModulus = 10 ** dnaDigits;\r\n\r\n    struct Fungus {\r\n        string name;\r\n        uint dna;\r\n    }\r\n\r\n    Fungus[] public fungi; //자료형 접근제어자 \r\n\r\n    mapping (uint => address) public fungusToOwner;  // ID를 넣으면 주소가 나오게 함\r\n    mapping (address => uint) public ownerFungusCount; // address가 몇 개의 fungi를 가지고 있는지\r\n\r\n    event newFungus(uint, string, uint);\r\n\r\n    function _createFungus(string memory name, uint dna) internal {\r\n        fungi.push(Fungus(name, dna));\r\n        uint id = fungi.length -1;\r\n        fungusToOwner[id] = msg.sender;\r\n        ownerFungusCount[msg.sender]++;\r\n        emit newFungus(id, name, dna);\r\n    }\r\n\r\n    function _generateRandomData(string calldata _str) private view returns(uint) {\r\n        uint rand = uint(keccak256(bytes(_str)));\r\n        uint dna = rand % dnaModulus;\r\n        dna = dna - dna % 100;\r\n        return dna;\r\n\r\n    }\r\n\r\n    function createFungus(string calldata name) public {\r\n        require(ownerFungusCount[msg.sender] == 0, \"A fungus already exist.\");\r\n        uint randDna = _generateRandomData(name);\r\n        _createFungus(name,randDna);\r\n    }\r\n\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FungusFactory.sol": {
				"FungusFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "newFungus",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "createFungus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "fungi",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "fungusToOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "ownerFungusCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FungusFactory.sol\":117:1350  contract FungusFactory {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FungusFactory.sol\":168:170  14 */\n  0x0e\n    /* \"contracts/FungusFactory.sol\":151:170  uint dnaDigits = 14 */\n  0x00\n  sstore\n    /* \"contracts/FungusFactory.sol\":201:210  dnaDigits */\n  sload(0x00)\n    /* \"contracts/FungusFactory.sol\":195:197  10 */\n  0x0a\n    /* \"contracts/FungusFactory.sol\":195:210  10 ** dnaDigits */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/FungusFactory.sol\":177:210  uint dnaModulus = 10 ** dnaDigits */\n  0x01\n  sstore\n    /* \"contracts/FungusFactory.sol\":117:1350  contract FungusFactory {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\n    /* \"#utility.yul\":7:187   */\ntag_5:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_6:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_7:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_14:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_18\n  tag_5\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":526:576   */\ntag_17:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_19:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_20\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_6\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_14)\ntag_16:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_8:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_21)\n    /* \"#utility.yul\":1390:1430   */\ntag_22:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_21)\n    /* \"#utility.yul\":1439:1475   */\ntag_23:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_25\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_24)\n    /* \"#utility.yul\":1578:1605   */\ntag_25:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_21)\n    /* \"#utility.yul\":1614:1805   */\ntag_26:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_28\n  tag_5\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1643:1686   */\ntag_27:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_30\n  tag_5\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1737:1777   */\ntag_29:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_21)\n    /* \"#utility.yul\":1528:1805   */\ntag_24:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_33\n  tag_5\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1992:2032   */\ntag_32:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_21)\n    /* \"#utility.yul\":1814:2060   */\ntag_31:\n    /* \"#utility.yul\":2085:2127   */\n  tag_34\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_7\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_36\n  tag_5\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":2137:2188   */\ntag_35:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_21:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_9:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2602   */\ntag_2:\n    /* \"#utility.yul\":2377:2382   */\n  0x00\n    /* \"#utility.yul\":2401:2424   */\n  tag_39\n    /* \"#utility.yul\":2419:2423   */\n  dup3\n    /* \"#utility.yul\":2401:2424   */\n  tag_9\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":2393:2424   */\n  swap2\n  pop\n    /* \"#utility.yul\":2445:2472   */\n  tag_40\n    /* \"#utility.yul\":2463:2471   */\n  dup4\n    /* \"#utility.yul\":2445:2472   */\n  tag_9\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":2433:2472   */\n  swap3\n  pop\n    /* \"#utility.yul\":2491:2595   */\n  tag_41\n    /* \"#utility.yul\":2528:2594   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2518:2526   */\n  dup5\n    /* \"#utility.yul\":2512:2516   */\n  dup5\n    /* \"#utility.yul\":2491:2595   */\n  tag_8\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2482:2595   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2602   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FungusFactory.sol\":117:1350  contract FungusFactory {... */\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FungusFactory.sol\":117:1350  contract FungusFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e17f883\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6bdfcef9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x703b3d38\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb082ab77\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FungusFactory.sol\":349:395  mapping (uint => address) public fungusToOwner */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FungusFactory.sol\":290:311  Fungus[] public fungi */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FungusFactory.sol\":446:495  mapping (address => uint) public ownerFungusCount */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FungusFactory.sol\":1117:1345  function createFungus(string calldata name) public {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/FungusFactory.sol\":349:395  mapping (uint => address) public fungusToOwner */\n    tag_10:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FungusFactory.sol\":290:311  Fungus[] public fungi */\n    tag_15:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_32\n      swap1\n      tag_31\n      jump\t// in\n    tag_32:\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_34\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_33)\n    tag_34:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_35:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_35\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/FungusFactory.sol\":446:495  mapping (address => uint) public ownerFungusCount */\n    tag_21:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FungusFactory.sol\":1117:1345  function createFungus(string calldata name) public {... */\n    tag_27:\n        /* \"contracts/FungusFactory.sol\":1219:1220  0 */\n      0x00\n        /* \"contracts/FungusFactory.sol\":1187:1203  ownerFungusCount */\n      0x04\n        /* \"contracts/FungusFactory.sol\":1187:1215  ownerFungusCount[msg.sender] */\n      0x00\n        /* \"contracts/FungusFactory.sol\":1204:1214  msg.sender */\n      caller\n        /* \"contracts/FungusFactory.sol\":1187:1215  ownerFungusCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FungusFactory.sol\":1187:1220  ownerFungusCount[msg.sender] == 0 */\n      eq\n        /* \"contracts/FungusFactory.sol\":1179:1248  require(ownerFungusCount[msg.sender] == 0, \"A fungus already exist.\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/FungusFactory.sol\":1259:1271  uint randDna */\n      0x00\n        /* \"contracts/FungusFactory.sol\":1274:1299  _generateRandomData(name) */\n      tag_40\n        /* \"contracts/FungusFactory.sol\":1294:1298  name */\n      dup4\n      dup4\n        /* \"contracts/FungusFactory.sol\":1274:1293  _generateRandomData */\n      tag_41\n        /* \"contracts/FungusFactory.sol\":1274:1299  _generateRandomData(name) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/FungusFactory.sol\":1259:1299  uint randDna = _generateRandomData(name) */\n      swap1\n      pop\n        /* \"contracts/FungusFactory.sol\":1310:1337  _createFungus(name,randDna) */\n      tag_42\n        /* \"contracts/FungusFactory.sol\":1324:1328  name */\n      dup4\n      dup4\n        /* \"contracts/FungusFactory.sol\":1310:1337  _createFungus(name,randDna) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FungusFactory.sol\":1329:1336  randDna */\n      dup3\n        /* \"contracts/FungusFactory.sol\":1310:1323  _createFungus */\n      tag_43\n        /* \"contracts/FungusFactory.sol\":1310:1337  _createFungus(name,randDna) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/FungusFactory.sol\":1168:1345  {... */\n      pop\n        /* \"contracts/FungusFactory.sol\":1117:1345  function createFungus(string calldata name) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FungusFactory.sol\":878:1109  function _generateRandomData(string calldata _str) private view returns(uint) {... */\n    tag_41:\n        /* \"contracts/FungusFactory.sol\":950:954  uint */\n      0x00\n        /* \"contracts/FungusFactory.sol\":967:976  uint rand */\n      dup1\n        /* \"contracts/FungusFactory.sol\":1000:1004  _str */\n      dup4\n      dup4\n        /* \"contracts/FungusFactory.sol\":984:1006  keccak256(bytes(_str)) */\n      mload(0x40)\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/FungusFactory.sol\":979:1007  uint(keccak256(bytes(_str))) */\n      0x00\n      shr\n        /* \"contracts/FungusFactory.sol\":967:1007  uint rand = uint(keccak256(bytes(_str))) */\n      swap1\n      pop\n        /* \"contracts/FungusFactory.sol\":1018:1026  uint dna */\n      0x00\n        /* \"contracts/FungusFactory.sol\":1036:1046  dnaModulus */\n      sload(0x01)\n        /* \"contracts/FungusFactory.sol\":1029:1033  rand */\n      dup3\n        /* \"contracts/FungusFactory.sol\":1029:1046  rand % dnaModulus */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/FungusFactory.sol\":1018:1046  uint dna = rand % dnaModulus */\n      swap1\n      pop\n        /* \"contracts/FungusFactory.sol\":1075:1078  100 */\n      0x64\n        /* \"contracts/FungusFactory.sol\":1069:1072  dna */\n      dup2\n        /* \"contracts/FungusFactory.sol\":1069:1078  dna % 100 */\n      tag_49\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_49:\n        /* \"contracts/FungusFactory.sol\":1063:1066  dna */\n      dup2\n        /* \"contracts/FungusFactory.sol\":1063:1078  dna - dna % 100 */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"contracts/FungusFactory.sol\":1057:1078  dna = dna - dna % 100 */\n      swap1\n      pop\n        /* \"contracts/FungusFactory.sol\":1096:1099  dna */\n      dup1\n        /* \"contracts/FungusFactory.sol\":1089:1099  return dna */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/FungusFactory.sol\":878:1109  function _generateRandomData(string calldata _str) private view returns(uint) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FungusFactory.sol\":602:870  function _createFungus(string memory name, uint dna) internal {... */\n    tag_43:\n        /* \"contracts/FungusFactory.sol\":675:680  fungi */\n      0x02\n        /* \"contracts/FungusFactory.sol\":686:703  Fungus(name, dna) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FungusFactory.sol\":693:697  name */\n      dup5\n        /* \"contracts/FungusFactory.sol\":686:703  Fungus(name, dna) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FungusFactory.sol\":699:702  dna */\n      dup4\n        /* \"contracts/FungusFactory.sol\":686:703  Fungus(name, dna) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/FungusFactory.sol\":675:704  fungi.push(Fungus(name, dna)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/FungusFactory.sol\":715:722  uint id */\n      0x00\n        /* \"contracts/FungusFactory.sol\":739:740  1 */\n      0x01\n        /* \"contracts/FungusFactory.sol\":725:730  fungi */\n      0x02\n        /* \"contracts/FungusFactory.sol\":725:737  fungi.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FungusFactory.sol\":725:740  fungi.length -1 */\n      tag_56\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_56:\n        /* \"contracts/FungusFactory.sol\":715:740  uint id = fungi.length -1 */\n      swap1\n      pop\n        /* \"contracts/FungusFactory.sol\":771:781  msg.sender */\n      caller\n        /* \"contracts/FungusFactory.sol\":751:764  fungusToOwner */\n      0x03\n        /* \"contracts/FungusFactory.sol\":751:768  fungusToOwner[id] */\n      0x00\n        /* \"contracts/FungusFactory.sol\":765:767  id */\n      dup4\n        /* \"contracts/FungusFactory.sol\":751:768  fungusToOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FungusFactory.sol\":751:781  fungusToOwner[id] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FungusFactory.sol\":792:808  ownerFungusCount */\n      0x04\n        /* \"contracts/FungusFactory.sol\":792:820  ownerFungusCount[msg.sender] */\n      0x00\n        /* \"contracts/FungusFactory.sol\":809:819  msg.sender */\n      caller\n        /* \"contracts/FungusFactory.sol\":792:820  ownerFungusCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FungusFactory.sol\":792:822  ownerFungusCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/FungusFactory.sol\":838:862  newFungus(id, name, dna) */\n      0x2e946779390b27c50a2225bee0b9af13e0848034733330963e93cedb42487fd7\n        /* \"contracts/FungusFactory.sol\":848:850  id */\n      dup2\n        /* \"contracts/FungusFactory.sol\":852:856  name */\n      dup5\n        /* \"contracts/FungusFactory.sol\":858:861  dna */\n      dup5\n        /* \"contracts/FungusFactory.sol\":838:862  newFungus(id, name, dna) */\n      mload(0x40)\n      tag_59\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/FungusFactory.sol\":664:870  {... */\n      pop\n        /* \"contracts/FungusFactory.sol\":602:870  function _createFungus(string memory name, uint dna) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_55:\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_31\n      jump\t// in\n    tag_61:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_63\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_62)\n    tag_63:\n      dup3\n      0x1f\n      lt\n      tag_64\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_62)\n    tag_64:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_62\n      jumpi\n      swap2\n      dup3\n      add\n    tag_65:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_65)\n    tag_66:\n    tag_62:\n      pop\n      swap1\n      pop\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      pop\n      swap1\n      jump\t// out\n    tag_68:\n    tag_69:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_69)\n    tag_70:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_72:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_73:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_74:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_75:\n        /* \"#utility.yul\":490:514   */\n      tag_106\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_74\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_107:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_76:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_109\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_75\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_112\n      tag_72\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":766:885   */\n    tag_111:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_113\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_76\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_77:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_78:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_116\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_77\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_79:\n        /* \"#utility.yul\":1346:1370   */\n      tag_118\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_78\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_12:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_120\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_79\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1710   */\n    tag_80:\n        /* \"#utility.yul\":1663:1669   */\n      0x00\n        /* \"#utility.yul\":1697:1702   */\n      dup2\n        /* \"#utility.yul\":1691:1703   */\n      mload\n        /* \"#utility.yul\":1681:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1885   */\n    tag_81:\n        /* \"#utility.yul\":1800:1811   */\n      0x00\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1829:1832   */\n      dup3\n        /* \"#utility.yul\":1822:1841   */\n      mstore\n        /* \"#utility.yul\":1874:1878   */\n      0x20\n        /* \"#utility.yul\":1869:1872   */\n      dup3\n        /* \"#utility.yul\":1865:1879   */\n      add\n        /* \"#utility.yul\":1850:1879   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:1885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2198   */\n    tag_82:\n        /* \"#utility.yul\":1959:1960   */\n      0x00\n        /* \"#utility.yul\":1969:2082   */\n    tag_124:\n        /* \"#utility.yul\":1983:1989   */\n      dup4\n        /* \"#utility.yul\":1980:1981   */\n      dup2\n        /* \"#utility.yul\":1977:1990   */\n      lt\n        /* \"#utility.yul\":1969:2082   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2068:2069   */\n      dup1\n        /* \"#utility.yul\":2063:2066   */\n      dup3\n        /* \"#utility.yul\":2059:2070   */\n      add\n        /* \"#utility.yul\":2053:2071   */\n      mload\n        /* \"#utility.yul\":2049:2050   */\n      dup2\n        /* \"#utility.yul\":2044:2047   */\n      dup5\n        /* \"#utility.yul\":2040:2051   */\n      add\n        /* \"#utility.yul\":2033:2072   */\n      mstore\n        /* \"#utility.yul\":2005:2007   */\n      0x20\n        /* \"#utility.yul\":2002:2003   */\n      dup2\n        /* \"#utility.yul\":1998:2008   */\n      add\n        /* \"#utility.yul\":1993:2008   */\n      swap1\n      pop\n        /* \"#utility.yul\":1969:2082   */\n      jump(tag_124)\n    tag_126:\n        /* \"#utility.yul\":2100:2106   */\n      dup4\n        /* \"#utility.yul\":2097:2098   */\n      dup2\n        /* \"#utility.yul\":2094:2107   */\n      gt\n        /* \"#utility.yul\":2091:2192   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":2180:2181   */\n      0x00\n        /* \"#utility.yul\":2171:2177   */\n      dup5\n        /* \"#utility.yul\":2166:2169   */\n      dup5\n        /* \"#utility.yul\":2162:2178   */\n      add\n        /* \"#utility.yul\":2155:2182   */\n      mstore\n        /* \"#utility.yul\":2091:2192   */\n    tag_127:\n        /* \"#utility.yul\":1940:2198   */\n      pop\n        /* \"#utility.yul\":1891:2198   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2204:2306   */\n    tag_83:\n        /* \"#utility.yul\":2245:2251   */\n      0x00\n        /* \"#utility.yul\":2296:2298   */\n      0x1f\n        /* \"#utility.yul\":2292:2299   */\n      not\n        /* \"#utility.yul\":2287:2289   */\n      0x1f\n        /* \"#utility.yul\":2280:2285   */\n      dup4\n        /* \"#utility.yul\":2276:2290   */\n      add\n        /* \"#utility.yul\":2272:2300   */\n      and\n        /* \"#utility.yul\":2262:2300   */\n      swap1\n      pop\n        /* \"#utility.yul\":2204:2306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2312:2676   */\n    tag_84:\n        /* \"#utility.yul\":2400:2403   */\n      0x00\n        /* \"#utility.yul\":2428:2467   */\n      tag_130\n        /* \"#utility.yul\":2461:2466   */\n      dup3\n        /* \"#utility.yul\":2428:2467   */\n      tag_80\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2483:2554   */\n      tag_131\n        /* \"#utility.yul\":2547:2553   */\n      dup2\n        /* \"#utility.yul\":2542:2545   */\n      dup6\n        /* \"#utility.yul\":2483:2554   */\n      tag_81\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2476:2554   */\n      swap4\n      pop\n        /* \"#utility.yul\":2563:2615   */\n      tag_132\n        /* \"#utility.yul\":2608:2614   */\n      dup2\n        /* \"#utility.yul\":2603:2606   */\n      dup6\n        /* \"#utility.yul\":2596:2600   */\n      0x20\n        /* \"#utility.yul\":2589:2594   */\n      dup7\n        /* \"#utility.yul\":2585:2601   */\n      add\n        /* \"#utility.yul\":2563:2615   */\n      tag_82\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2640:2669   */\n      tag_133\n        /* \"#utility.yul\":2662:2668   */\n      dup2\n        /* \"#utility.yul\":2640:2669   */\n      tag_83\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2635:2638   */\n      dup5\n        /* \"#utility.yul\":2631:2670   */\n      add\n        /* \"#utility.yul\":2624:2670   */\n      swap2\n      pop\n        /* \"#utility.yul\":2404:2676   */\n      pop\n        /* \"#utility.yul\":2312:2676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2682:2800   */\n    tag_85:\n        /* \"#utility.yul\":2769:2793   */\n      tag_135\n        /* \"#utility.yul\":2787:2792   */\n      dup2\n        /* \"#utility.yul\":2769:2793   */\n      tag_74\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2764:2767   */\n      dup3\n        /* \"#utility.yul\":2757:2794   */\n      mstore\n        /* \"#utility.yul\":2682:2800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2806:3229   */\n    tag_17:\n        /* \"#utility.yul\":2947:2951   */\n      0x00\n        /* \"#utility.yul\":2985:2987   */\n      0x40\n        /* \"#utility.yul\":2974:2983   */\n      dup3\n        /* \"#utility.yul\":2970:2988   */\n      add\n        /* \"#utility.yul\":2962:2988   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3043   */\n      dup2\n        /* \"#utility.yul\":3028:3032   */\n      dup2\n        /* \"#utility.yul\":3024:3044   */\n      sub\n        /* \"#utility.yul\":3020:3021   */\n      0x00\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3005:3022   */\n      add\n        /* \"#utility.yul\":2998:3045   */\n      mstore\n        /* \"#utility.yul\":3062:3140   */\n      tag_137\n        /* \"#utility.yul\":3135:3139   */\n      dup2\n        /* \"#utility.yul\":3126:3132   */\n      dup6\n        /* \"#utility.yul\":3062:3140   */\n      tag_84\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3054:3140   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3222   */\n      tag_138\n        /* \"#utility.yul\":3218:3220   */\n      0x20\n        /* \"#utility.yul\":3207:3216   */\n      dup4\n        /* \"#utility.yul\":3203:3221   */\n      add\n        /* \"#utility.yul\":3194:3200   */\n      dup5\n        /* \"#utility.yul\":3150:3222   */\n      tag_85\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2806:3229   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3235:3357   */\n    tag_86:\n        /* \"#utility.yul\":3308:3332   */\n      tag_140\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3308:3332   */\n      tag_78\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3301:3306   */\n      dup2\n        /* \"#utility.yul\":3298:3333   */\n      eq\n        /* \"#utility.yul\":3288:3351   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3344:3345   */\n      dup1\n        /* \"#utility.yul\":3337:3349   */\n      revert\n        /* \"#utility.yul\":3288:3351   */\n    tag_141:\n        /* \"#utility.yul\":3235:3357   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3363:3502   */\n    tag_87:\n        /* \"#utility.yul\":3409:3414   */\n      0x00\n        /* \"#utility.yul\":3447:3453   */\n      dup2\n        /* \"#utility.yul\":3434:3454   */\n      calldataload\n        /* \"#utility.yul\":3425:3454   */\n      swap1\n      pop\n        /* \"#utility.yul\":3463:3496   */\n      tag_143\n        /* \"#utility.yul\":3490:3495   */\n      dup2\n        /* \"#utility.yul\":3463:3496   */\n      tag_86\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3363:3502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3508:3837   */\n    tag_20:\n        /* \"#utility.yul\":3567:3573   */\n      0x00\n        /* \"#utility.yul\":3616:3618   */\n      0x20\n        /* \"#utility.yul\":3604:3613   */\n      dup3\n        /* \"#utility.yul\":3595:3602   */\n      dup5\n        /* \"#utility.yul\":3591:3614   */\n      sub\n        /* \"#utility.yul\":3587:3619   */\n      slt\n        /* \"#utility.yul\":3584:3703   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3622:3701   */\n      tag_146\n      tag_72\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3584:3703   */\n    tag_145:\n        /* \"#utility.yul\":3742:3743   */\n      0x00\n        /* \"#utility.yul\":3767:3820   */\n      tag_147\n        /* \"#utility.yul\":3812:3819   */\n      dup5\n        /* \"#utility.yul\":3803:3809   */\n      dup3\n        /* \"#utility.yul\":3792:3801   */\n      dup6\n        /* \"#utility.yul\":3788:3810   */\n      add\n        /* \"#utility.yul\":3767:3820   */\n      tag_87\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3757:3820   */\n      swap2\n      pop\n        /* \"#utility.yul\":3713:3830   */\n      pop\n        /* \"#utility.yul\":3508:3837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3843:4065   */\n    tag_23:\n        /* \"#utility.yul\":3936:3940   */\n      0x00\n        /* \"#utility.yul\":3974:3976   */\n      0x20\n        /* \"#utility.yul\":3963:3972   */\n      dup3\n        /* \"#utility.yul\":3959:3977   */\n      add\n        /* \"#utility.yul\":3951:3977   */\n      swap1\n      pop\n        /* \"#utility.yul\":3987:4058   */\n      tag_149\n        /* \"#utility.yul\":4055:4056   */\n      0x00\n        /* \"#utility.yul\":4044:4053   */\n      dup4\n        /* \"#utility.yul\":4040:4057   */\n      add\n        /* \"#utility.yul\":4031:4037   */\n      dup5\n        /* \"#utility.yul\":3987:4058   */\n      tag_85\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3843:4065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4071:4188   */\n    tag_88:\n        /* \"#utility.yul\":4180:4181   */\n      0x00\n        /* \"#utility.yul\":4177:4178   */\n      dup1\n        /* \"#utility.yul\":4170:4182   */\n      revert\n        /* \"#utility.yul\":4194:4311   */\n    tag_89:\n        /* \"#utility.yul\":4303:4304   */\n      0x00\n        /* \"#utility.yul\":4300:4301   */\n      dup1\n        /* \"#utility.yul\":4293:4305   */\n      revert\n        /* \"#utility.yul\":4317:4434   */\n    tag_90:\n        /* \"#utility.yul\":4426:4427   */\n      0x00\n        /* \"#utility.yul\":4423:4424   */\n      dup1\n        /* \"#utility.yul\":4416:4428   */\n      revert\n        /* \"#utility.yul\":4454:5007   */\n    tag_91:\n        /* \"#utility.yul\":4512:4520   */\n      0x00\n        /* \"#utility.yul\":4522:4528   */\n      dup1\n        /* \"#utility.yul\":4572:4575   */\n      dup4\n        /* \"#utility.yul\":4565:4569   */\n      0x1f\n        /* \"#utility.yul\":4557:4563   */\n      dup5\n        /* \"#utility.yul\":4553:4570   */\n      add\n        /* \"#utility.yul\":4549:4576   */\n      slt\n        /* \"#utility.yul\":4539:4661   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":4580:4659   */\n      tag_155\n      tag_88\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4539:4661   */\n    tag_154:\n        /* \"#utility.yul\":4693:4699   */\n      dup3\n        /* \"#utility.yul\":4680:4700   */\n      calldataload\n        /* \"#utility.yul\":4670:4700   */\n      swap1\n      pop\n        /* \"#utility.yul\":4723:4741   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4715:4721   */\n      dup2\n        /* \"#utility.yul\":4712:4742   */\n      gt\n        /* \"#utility.yul\":4709:4826   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4745:4824   */\n      tag_157\n      tag_89\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4709:4826   */\n    tag_156:\n        /* \"#utility.yul\":4859:4863   */\n      0x20\n        /* \"#utility.yul\":4851:4857   */\n      dup4\n        /* \"#utility.yul\":4847:4864   */\n      add\n        /* \"#utility.yul\":4835:4864   */\n      swap2\n      pop\n        /* \"#utility.yul\":4913:4916   */\n      dup4\n        /* \"#utility.yul\":4905:4909   */\n      0x01\n        /* \"#utility.yul\":4897:4903   */\n      dup3\n        /* \"#utility.yul\":4893:4910   */\n      mul\n        /* \"#utility.yul\":4883:4891   */\n      dup4\n        /* \"#utility.yul\":4879:4911   */\n      add\n        /* \"#utility.yul\":4876:4917   */\n      gt\n        /* \"#utility.yul\":4873:5001   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":4920:4999   */\n      tag_159\n      tag_90\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4873:5001   */\n    tag_158:\n        /* \"#utility.yul\":4454:5007   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5013:5542   */\n    tag_26:\n        /* \"#utility.yul\":5084:5090   */\n      0x00\n        /* \"#utility.yul\":5092:5098   */\n      dup1\n        /* \"#utility.yul\":5141:5143   */\n      0x20\n        /* \"#utility.yul\":5129:5138   */\n      dup4\n        /* \"#utility.yul\":5120:5127   */\n      dup6\n        /* \"#utility.yul\":5116:5139   */\n      sub\n        /* \"#utility.yul\":5112:5144   */\n      slt\n        /* \"#utility.yul\":5109:5228   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":5147:5226   */\n      tag_162\n      tag_72\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5109:5228   */\n    tag_161:\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5284:5293   */\n      dup4\n        /* \"#utility.yul\":5280:5297   */\n      add\n        /* \"#utility.yul\":5267:5298   */\n      calldataload\n        /* \"#utility.yul\":5325:5343   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5317:5323   */\n      dup2\n        /* \"#utility.yul\":5314:5344   */\n      gt\n        /* \"#utility.yul\":5311:5428   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":5347:5426   */\n      tag_164\n      tag_73\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5311:5428   */\n    tag_163:\n        /* \"#utility.yul\":5460:5525   */\n      tag_165\n        /* \"#utility.yul\":5517:5524   */\n      dup6\n        /* \"#utility.yul\":5508:5514   */\n      dup3\n        /* \"#utility.yul\":5497:5506   */\n      dup7\n        /* \"#utility.yul\":5493:5515   */\n      add\n        /* \"#utility.yul\":5460:5525   */\n      tag_91\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5442:5525   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5238:5535   */\n      pop\n        /* \"#utility.yul\":5013:5542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5728   */\n    tag_92:\n        /* \"#utility.yul\":5596:5673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5593:5594   */\n      0x00\n        /* \"#utility.yul\":5586:5674   */\n      mstore\n        /* \"#utility.yul\":5693:5697   */\n      0x22\n        /* \"#utility.yul\":5690:5691   */\n      0x04\n        /* \"#utility.yul\":5683:5698   */\n      mstore\n        /* \"#utility.yul\":5717:5721   */\n      0x24\n        /* \"#utility.yul\":5714:5715   */\n      0x00\n        /* \"#utility.yul\":5707:5722   */\n      revert\n        /* \"#utility.yul\":5734:6054   */\n    tag_31:\n        /* \"#utility.yul\":5778:5784   */\n      0x00\n        /* \"#utility.yul\":5815:5816   */\n      0x02\n        /* \"#utility.yul\":5809:5813   */\n      dup3\n        /* \"#utility.yul\":5805:5817   */\n      div\n        /* \"#utility.yul\":5795:5817   */\n      swap1\n      pop\n        /* \"#utility.yul\":5862:5863   */\n      0x01\n        /* \"#utility.yul\":5856:5860   */\n      dup3\n        /* \"#utility.yul\":5852:5864   */\n      and\n        /* \"#utility.yul\":5883:5901   */\n      dup1\n        /* \"#utility.yul\":5873:5954   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":5939:5943   */\n      0x7f\n        /* \"#utility.yul\":5931:5937   */\n      dup3\n        /* \"#utility.yul\":5927:5944   */\n      and\n        /* \"#utility.yul\":5917:5944   */\n      swap2\n      pop\n        /* \"#utility.yul\":5873:5954   */\n    tag_168:\n        /* \"#utility.yul\":6001:6003   */\n      0x20\n        /* \"#utility.yul\":5993:5999   */\n      dup3\n        /* \"#utility.yul\":5990:6004   */\n      lt\n        /* \"#utility.yul\":5970:5988   */\n      dup2\n        /* \"#utility.yul\":5967:6005   */\n      eq\n        /* \"#utility.yul\":5964:6048   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":6020:6038   */\n      tag_170\n      tag_92\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5964:6048   */\n    tag_169:\n        /* \"#utility.yul\":5785:6054   */\n      pop\n        /* \"#utility.yul\":5734:6054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6060:6233   */\n    tag_93:\n        /* \"#utility.yul\":6200:6225   */\n      0x412066756e67757320616c72656164792065786973742e000000000000000000\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6188:6194   */\n      dup3\n        /* \"#utility.yul\":6184:6198   */\n      add\n        /* \"#utility.yul\":6177:6226   */\n      mstore\n        /* \"#utility.yul\":6060:6233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6239:6605   */\n    tag_94:\n        /* \"#utility.yul\":6381:6384   */\n      0x00\n        /* \"#utility.yul\":6402:6469   */\n      tag_173\n        /* \"#utility.yul\":6466:6468   */\n      0x17\n        /* \"#utility.yul\":6461:6464   */\n      dup4\n        /* \"#utility.yul\":6402:6469   */\n      tag_81\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6395:6469   */\n      swap2\n      pop\n        /* \"#utility.yul\":6478:6571   */\n      tag_174\n        /* \"#utility.yul\":6567:6570   */\n      dup3\n        /* \"#utility.yul\":6478:6571   */\n      tag_93\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6596:6598   */\n      0x20\n        /* \"#utility.yul\":6591:6594   */\n      dup3\n        /* \"#utility.yul\":6587:6599   */\n      add\n        /* \"#utility.yul\":6580:6599   */\n      swap1\n      pop\n        /* \"#utility.yul\":6239:6605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6611:7030   */\n    tag_39:\n        /* \"#utility.yul\":6777:6781   */\n      0x00\n        /* \"#utility.yul\":6815:6817   */\n      0x20\n        /* \"#utility.yul\":6804:6813   */\n      dup3\n        /* \"#utility.yul\":6800:6818   */\n      add\n        /* \"#utility.yul\":6792:6818   */\n      swap1\n      pop\n        /* \"#utility.yul\":6864:6873   */\n      dup2\n        /* \"#utility.yul\":6858:6862   */\n      dup2\n        /* \"#utility.yul\":6854:6874   */\n      sub\n        /* \"#utility.yul\":6850:6851   */\n      0x00\n        /* \"#utility.yul\":6839:6848   */\n      dup4\n        /* \"#utility.yul\":6835:6852   */\n      add\n        /* \"#utility.yul\":6828:6875   */\n      mstore\n        /* \"#utility.yul\":6892:7023   */\n      tag_176\n        /* \"#utility.yul\":7018:7022   */\n      dup2\n        /* \"#utility.yul\":6892:7023   */\n      tag_94\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6884:7023   */\n      swap1\n      pop\n        /* \"#utility.yul\":6611:7030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7036:7183   */\n    tag_95:\n        /* \"#utility.yul\":7137:7148   */\n      0x00\n        /* \"#utility.yul\":7174:7177   */\n      dup2\n        /* \"#utility.yul\":7159:7177   */\n      swap1\n      pop\n        /* \"#utility.yul\":7036:7183   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7189:7343   */\n    tag_96:\n        /* \"#utility.yul\":7273:7279   */\n      dup3\n        /* \"#utility.yul\":7268:7271   */\n      dup2\n        /* \"#utility.yul\":7263:7266   */\n      dup4\n        /* \"#utility.yul\":7250:7280   */\n      calldatacopy\n        /* \"#utility.yul\":7335:7336   */\n      0x00\n        /* \"#utility.yul\":7326:7332   */\n      dup4\n        /* \"#utility.yul\":7321:7324   */\n      dup4\n        /* \"#utility.yul\":7317:7333   */\n      add\n        /* \"#utility.yul\":7310:7337   */\n      mstore\n        /* \"#utility.yul\":7189:7343   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7371:7685   */\n    tag_97:\n        /* \"#utility.yul\":7485:7488   */\n      0x00\n        /* \"#utility.yul\":7506:7594   */\n      tag_180\n        /* \"#utility.yul\":7587:7593   */\n      dup4\n        /* \"#utility.yul\":7582:7585   */\n      dup6\n        /* \"#utility.yul\":7506:7594   */\n      tag_95\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7499:7594   */\n      swap4\n      pop\n        /* \"#utility.yul\":7604:7647   */\n      tag_181\n        /* \"#utility.yul\":7640:7646   */\n      dup4\n        /* \"#utility.yul\":7635:7638   */\n      dup6\n        /* \"#utility.yul\":7628:7633   */\n      dup5\n        /* \"#utility.yul\":7604:7647   */\n      tag_96\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7672:7678   */\n      dup3\n        /* \"#utility.yul\":7667:7670   */\n      dup5\n        /* \"#utility.yul\":7663:7679   */\n      add\n        /* \"#utility.yul\":7656:7679   */\n      swap1\n      pop\n        /* \"#utility.yul\":7371:7685   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7691:7982   */\n    tag_46:\n        /* \"#utility.yul\":7831:7834   */\n      0x00\n        /* \"#utility.yul\":7853:7956   */\n      tag_183\n        /* \"#utility.yul\":7952:7955   */\n      dup3\n        /* \"#utility.yul\":7943:7949   */\n      dup5\n        /* \"#utility.yul\":7935:7941   */\n      dup7\n        /* \"#utility.yul\":7853:7956   */\n      tag_97\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7846:7956   */\n      swap2\n      pop\n        /* \"#utility.yul\":7973:7976   */\n      dup2\n        /* \"#utility.yul\":7966:7976   */\n      swap1\n      pop\n        /* \"#utility.yul\":7691:7982   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7988:8168   */\n    tag_98:\n        /* \"#utility.yul\":8036:8113   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8033:8034   */\n      0x00\n        /* \"#utility.yul\":8026:8114   */\n      mstore\n        /* \"#utility.yul\":8133:8137   */\n      0x12\n        /* \"#utility.yul\":8130:8131   */\n      0x04\n        /* \"#utility.yul\":8123:8138   */\n      mstore\n        /* \"#utility.yul\":8157:8161   */\n      0x24\n        /* \"#utility.yul\":8154:8155   */\n      0x00\n        /* \"#utility.yul\":8147:8162   */\n      revert\n        /* \"#utility.yul\":8174:8350   */\n    tag_48:\n        /* \"#utility.yul\":8206:8207   */\n      0x00\n        /* \"#utility.yul\":8223:8243   */\n      tag_186\n        /* \"#utility.yul\":8241:8242   */\n      dup3\n        /* \"#utility.yul\":8223:8243   */\n      tag_74\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8218:8243   */\n      swap2\n      pop\n        /* \"#utility.yul\":8257:8277   */\n      tag_187\n        /* \"#utility.yul\":8275:8276   */\n      dup4\n        /* \"#utility.yul\":8257:8277   */\n      tag_74\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8252:8277   */\n      swap3\n      pop\n        /* \"#utility.yul\":8296:8297   */\n      dup3\n        /* \"#utility.yul\":8286:8321   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":8301:8319   */\n      tag_189\n      tag_98\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8286:8321   */\n    tag_188:\n        /* \"#utility.yul\":8342:8343   */\n      dup3\n        /* \"#utility.yul\":8339:8340   */\n      dup3\n        /* \"#utility.yul\":8335:8344   */\n      mod\n        /* \"#utility.yul\":8330:8344   */\n      swap1\n      pop\n        /* \"#utility.yul\":8174:8350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8356:8536   */\n    tag_99:\n        /* \"#utility.yul\":8404:8481   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8401:8402   */\n      0x00\n        /* \"#utility.yul\":8394:8482   */\n      mstore\n        /* \"#utility.yul\":8501:8505   */\n      0x11\n        /* \"#utility.yul\":8498:8499   */\n      0x04\n        /* \"#utility.yul\":8491:8506   */\n      mstore\n        /* \"#utility.yul\":8525:8529   */\n      0x24\n        /* \"#utility.yul\":8522:8523   */\n      0x00\n        /* \"#utility.yul\":8515:8530   */\n      revert\n        /* \"#utility.yul\":8542:8733   */\n    tag_51:\n        /* \"#utility.yul\":8582:8586   */\n      0x00\n        /* \"#utility.yul\":8602:8622   */\n      tag_192\n        /* \"#utility.yul\":8620:8621   */\n      dup3\n        /* \"#utility.yul\":8602:8622   */\n      tag_74\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8597:8622   */\n      swap2\n      pop\n        /* \"#utility.yul\":8636:8656   */\n      tag_193\n        /* \"#utility.yul\":8654:8655   */\n      dup4\n        /* \"#utility.yul\":8636:8656   */\n      tag_74\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8631:8656   */\n      swap3\n      pop\n        /* \"#utility.yul\":8675:8676   */\n      dup3\n        /* \"#utility.yul\":8672:8673   */\n      dup3\n        /* \"#utility.yul\":8669:8677   */\n      lt\n        /* \"#utility.yul\":8666:8700   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":8680:8698   */\n      tag_195\n      tag_99\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":8666:8700   */\n    tag_194:\n        /* \"#utility.yul\":8725:8726   */\n      dup3\n        /* \"#utility.yul\":8722:8723   */\n      dup3\n        /* \"#utility.yul\":8718:8727   */\n      sub\n        /* \"#utility.yul\":8710:8727   */\n      swap1\n      pop\n        /* \"#utility.yul\":8542:8733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8739:8972   */\n    tag_58:\n        /* \"#utility.yul\":8778:8781   */\n      0x00\n        /* \"#utility.yul\":8801:8825   */\n      tag_197\n        /* \"#utility.yul\":8819:8824   */\n      dup3\n        /* \"#utility.yul\":8801:8825   */\n      tag_74\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8792:8825   */\n      swap2\n      pop\n        /* \"#utility.yul\":8847:8913   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8840:8845   */\n      dup3\n        /* \"#utility.yul\":8837:8914   */\n      eq\n        /* \"#utility.yul\":8834:8937   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":8917:8935   */\n      tag_199\n      tag_99\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8834:8937   */\n    tag_198:\n        /* \"#utility.yul\":8964:8965   */\n      0x01\n        /* \"#utility.yul\":8957:8962   */\n      dup3\n        /* \"#utility.yul\":8953:8966   */\n      add\n        /* \"#utility.yul\":8946:8966   */\n      swap1\n      pop\n        /* \"#utility.yul\":8739:8972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8978:9511   */\n    tag_60:\n        /* \"#utility.yul\":9147:9151   */\n      0x00\n        /* \"#utility.yul\":9185:9187   */\n      0x60\n        /* \"#utility.yul\":9174:9183   */\n      dup3\n        /* \"#utility.yul\":9170:9188   */\n      add\n        /* \"#utility.yul\":9162:9188   */\n      swap1\n      pop\n        /* \"#utility.yul\":9198:9269   */\n      tag_201\n        /* \"#utility.yul\":9266:9267   */\n      0x00\n        /* \"#utility.yul\":9255:9264   */\n      dup4\n        /* \"#utility.yul\":9251:9268   */\n      add\n        /* \"#utility.yul\":9242:9248   */\n      dup7\n        /* \"#utility.yul\":9198:9269   */\n      tag_85\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":9316:9325   */\n      dup2\n        /* \"#utility.yul\":9310:9314   */\n      dup2\n        /* \"#utility.yul\":9306:9326   */\n      sub\n        /* \"#utility.yul\":9301:9303   */\n      0x20\n        /* \"#utility.yul\":9290:9299   */\n      dup4\n        /* \"#utility.yul\":9286:9304   */\n      add\n        /* \"#utility.yul\":9279:9327   */\n      mstore\n        /* \"#utility.yul\":9344:9422   */\n      tag_202\n        /* \"#utility.yul\":9417:9421   */\n      dup2\n        /* \"#utility.yul\":9408:9414   */\n      dup6\n        /* \"#utility.yul\":9344:9422   */\n      tag_84\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":9336:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9432:9504   */\n      tag_203\n        /* \"#utility.yul\":9500:9502   */\n      0x40\n        /* \"#utility.yul\":9489:9498   */\n      dup4\n        /* \"#utility.yul\":9485:9503   */\n      add\n        /* \"#utility.yul\":9476:9482   */\n      dup5\n        /* \"#utility.yul\":9432:9504   */\n      tag_85\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8978:9511   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073f9c75126ae254028f0cd4fdad3c176b00b0121ed8f4e2c27594d87c28e248f64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"checked_exp_helper": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 49,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 96,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2605:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "244:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "254:34:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "279:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:13:3"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:3"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "225:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "235:8:3",
														"type": ""
													}
												],
												"src": "193:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "374:775:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "384:15:3",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "393:6:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "408:14:3",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "417:5:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "466:677:3",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "554:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:3"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:3"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:3"
																		},
																		"nodeType": "YulIf",
																		"src": "526:50:3"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "621:419:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1001:25:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:3"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:3"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:3"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:3"
																		},
																		"nodeType": "YulIf",
																		"src": "589:451:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1053:23:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:3"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:3"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1089:44:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:3"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:3"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "452:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "455:2:3",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "435:3:3",
																"statements": []
															},
															"src": "431:712:3"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "329:6:3",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "337:5:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "344:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "354:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "362:5:3",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "369:4:3",
														"type": ""
													}
												],
												"src": "301:848:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:1013:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1412:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:3",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1423:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:16:3"
															},
															"nodeType": "YulIf",
															"src": "1390:40:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:20:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1457:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1468:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:12:3"
															},
															"nodeType": "YulIf",
															"src": "1439:36:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1585:20:3",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1587:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:3",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:3"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1598:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1578:27:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1629:176:3",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1664:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:3",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:3"
																				},
																				"nodeType": "YulIf",
																				"src": "1643:43:3"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1699:25:3",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:3",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:3"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:3"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:3"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1755:22:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:3"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:3"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:3"
																				},
																				"nodeType": "YulIf",
																				"src": "1737:40:3"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1790:5:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1614:191:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:3",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1535:4:3"
															},
															"nodeType": "YulSwitch",
															"src": "1528:277:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1937:123:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1951:28:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:3"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:3"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:3"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:3"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2010:22:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:3"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:3"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:3"
																		},
																		"nodeType": "YulIf",
																		"src": "1992:40:3"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2045:5:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:3",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:3",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:3",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:111:3"
															},
															"nodeType": "YulIf",
															"src": "1814:246:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2070:57:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:3"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:3"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:42:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:3"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2166:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:3"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:25:3"
															},
															"nodeType": "YulIf",
															"src": "2137:51:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2197:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:3"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:16:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1185:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1191:8:3",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "1201:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1209:5:3",
														"type": ""
													}
												],
												"src": "1155:1073:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2300:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2261:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2271:7:3",
														"type": ""
													}
												],
												"src": "2234:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2383:219:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2393:31:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2419:4:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2401:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:23:3"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2393:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2433:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2463:8:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2445:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:27:3"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "2433:8:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2482:113:3",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2512:4:3"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2518:8:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "2491:20:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:104:3"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2482:5:3"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2358:4:3",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2364:8:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2377:5:3",
														"type": ""
													}
												],
												"src": "2317:285:3"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600e600055600054600a6200001a9190620001be565b6001553480156200002a57600080fd5b506200020f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620000bf5780860481111562000097576200009662000031565b5b6001851615620000a75780820291505b8081029050620000b78562000060565b945062000077565b94509492505050565b600082620000da5760019050620001ad565b81620000ea5760009050620001ad565b81600181146200010357600281146200010e5762000144565b6001915050620001ad565b60ff84111562000123576200012262000031565b5b8360020a9150848211156200013d576200013c62000031565b5b50620001ad565b5060208310610133831016604e8410600b84101617156200017e5782820a90508381111562000178576200017762000031565b5b620001ad565b6200018d84848460016200006d565b92509050818404811115620001a757620001a662000031565b5b81810290505b9392505050565b6000819050919050565b6000620001cb82620001b4565b9150620001d883620001b4565b9250620002077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620000c8565b905092915050565b610ab4806200021f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e17f883146100515780636bdfcef914610081578063703b3d38146100b2578063b082ab77146100e2575b600080fd5b61006b60048036038101906100669190610588565b6100fe565b60405161007891906105f6565b60405180910390f35b61009b60048036038101906100969190610588565b610131565b6040516100a99291906106b9565b60405180910390f35b6100cc60048036038101906100c79190610715565b6101ed565b6040516100d99190610742565b60405180910390f35b6100fc60048036038101906100f791906107c2565b610205565b005b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061014157600080fd5b90600052602060002090600202016000915090508060000180546101649061083e565b80601f01602080910402602001604051908101604052809291908181526020018280546101909061083e565b80156101dd5780601f106101b2576101008083540402835291602001916101dd565b820191906000526020600020905b8154815290600101906020018083116101c057829003601f168201915b5050505050908060010154905082565b60046020528060005260406000206000915090505481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906108bc565b60405180910390fd5b600061029383836102e8565b90506102e383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508261033f565b505050565b60008083836040516102fb92919061091b565b604051809103902060001c90506000600154826103189190610963565b90506064816103279190610963565b8161033291906109c3565b9050809250505092915050565b60026040518060400160405280848152602001838152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019061039b9291906104a5565b50602082015181600101555050600060016002805490506103bc91906109c3565b9050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610460906109f7565b91905055507f2e946779390b27c50a2225bee0b9af13e0848034733330963e93cedb42487fd781848460405161049893929190610a40565b60405180910390a1505050565b8280546104b19061083e565b90600052602060002090601f0160209004810192826104d3576000855561051a565b82601f106104ec57805160ff191683800117855561051a565b8280016001018555821561051a579182015b828111156105195782518255916020019190600101906104fe565b5b509050610527919061052b565b5090565b5b8082111561054457600081600090555060010161052c565b5090565b600080fd5b600080fd5b6000819050919050565b61056581610552565b811461057057600080fd5b50565b6000813590506105828161055c565b92915050565b60006020828403121561059e5761059d610548565b5b60006105ac84828501610573565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105e0826105b5565b9050919050565b6105f0816105d5565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561064b578082015181840152602081019050610630565b8381111561065a576000848401525b50505050565b6000601f19601f8301169050919050565b600061067c82610611565b610686818561061c565b935061069681856020860161062d565b61069f81610660565b840191505092915050565b6106b381610552565b82525050565b600060408201905081810360008301526106d38185610671565b90506106e260208301846106aa565b9392505050565b6106f2816105d5565b81146106fd57600080fd5b50565b60008135905061070f816106e9565b92915050565b60006020828403121561072b5761072a610548565b5b600061073984828501610700565b91505092915050565b600060208201905061075760008301846106aa565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107825761078161075d565b5b8235905067ffffffffffffffff81111561079f5761079e610762565b5b6020830191508360018202830111156107bb576107ba610767565b5b9250929050565b600080602083850312156107d9576107d8610548565b5b600083013567ffffffffffffffff8111156107f7576107f661054d565b5b6108038582860161076c565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085657607f821691505b6020821081141561086a5761086961080f565b5b50919050565b7f412066756e67757320616c72656164792065786973742e000000000000000000600082015250565b60006108a660178361061c565b91506108b182610870565b602082019050919050565b600060208201905081810360008301526108d581610899565b9050919050565b600081905092915050565b82818337600083830152505050565b600061090283856108dc565b935061090f8385846108e7565b82840190509392505050565b60006109288284866108f6565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061096e82610552565b915061097983610552565b92508261098957610988610934565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce82610552565b91506109d983610552565b9250828210156109ec576109eb610994565b5b828203905092915050565b6000610a0282610552565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3557610a34610994565b5b600182019050919050565b6000606082019050610a5560008301866106aa565b8181036020830152610a678185610671565b9050610a7660408301846106aa565b94935050505056fea264697066735822122073f9c75126ae254028f0cd4fdad3c176b00b0121ed8f4e2c27594d87c28e248f64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xE PUSH1 0x0 SSTORE PUSH1 0x0 SLOAD PUSH1 0xA PUSH3 0x1A SWAP2 SWAP1 PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x20F JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xBF JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x97 JUMPI PUSH3 0x96 PUSH3 0x31 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xA7 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xB7 DUP6 PUSH3 0x60 JUMP JUMPDEST SWAP5 POP PUSH3 0x77 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xDA JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x1AD JUMP JUMPDEST DUP2 PUSH3 0xEA JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0x1AD JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x103 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x10E JUMPI PUSH3 0x144 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x1AD JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x123 JUMPI PUSH3 0x122 PUSH3 0x31 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13C PUSH3 0x31 JUMP JUMPDEST JUMPDEST POP PUSH3 0x1AD JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x17E JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x178 JUMPI PUSH3 0x177 PUSH3 0x31 JUMP JUMPDEST JUMPDEST PUSH3 0x1AD JUMP JUMPDEST PUSH3 0x18D DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x6D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x1A7 JUMPI PUSH3 0x1A6 PUSH3 0x31 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CB DUP3 PUSH3 0x1B4 JUMP JUMPDEST SWAP2 POP PUSH3 0x1D8 DUP4 PUSH3 0x1B4 JUMP JUMPDEST SWAP3 POP PUSH3 0x207 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB4 DUP1 PUSH3 0x21F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE17F883 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6BDFCEF9 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x703B3D38 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB082AB77 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP3 SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x164 SWAP1 PUSH2 0x83E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x190 SWAP1 PUSH2 0x83E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x293 DUP4 DUP4 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E3 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x33F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP3 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST DUP2 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x39B SWAP3 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x460 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x2E946779390B27C50A2225BEE0B9AF13E0848034733330963E93CEDB42487FD7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x498 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4B1 SWAP1 PUSH2 0x83E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x51A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4EC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x51A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x51A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x519 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4FE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x52C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x565 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP2 EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x582 DUP2 PUSH2 0x55C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AC DUP5 DUP3 DUP6 ADD PUSH2 0x573 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP3 PUSH2 0x5B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F0 DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x630 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67C DUP3 PUSH2 0x611 JUMP JUMPDEST PUSH2 0x686 DUP2 DUP6 PUSH2 0x61C JUMP JUMPDEST SWAP4 POP PUSH2 0x696 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x62D JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x660 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6D3 DUP2 DUP6 PUSH2 0x671 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6F2 DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x70F DUP2 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH2 0x72A PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x739 DUP5 DUP3 DUP6 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x757 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x782 JUMPI PUSH2 0x781 PUSH2 0x75D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x762 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7BB JUMPI PUSH2 0x7BA PUSH2 0x767 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0x54D JUMP JUMPDEST JUMPDEST PUSH2 0x803 DUP6 DUP3 DUP7 ADD PUSH2 0x76C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x856 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x80F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x412066756E67757320616C72656164792065786973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH1 0x17 DUP4 PUSH2 0x61C JUMP JUMPDEST SWAP2 POP PUSH2 0x8B1 DUP3 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D5 DUP2 PUSH2 0x899 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x902 DUP4 DUP6 PUSH2 0x8DC JUMP JUMPDEST SWAP4 POP PUSH2 0x90F DUP4 DUP6 DUP5 PUSH2 0x8E7 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x928 DUP3 DUP5 DUP7 PUSH2 0x8F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x96E DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x979 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x989 JUMPI PUSH2 0x988 PUSH2 0x934 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D9 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9EC JUMPI PUSH2 0x9EB PUSH2 0x994 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA35 JUMPI PUSH2 0xA34 PUSH2 0x994 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA55 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA67 DUP2 DUP6 PUSH2 0x671 JUMP JUMPDEST SWAP1 POP PUSH2 0xA76 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xF9C75126AE254028F0CD4FDAD3C176B00B0121ED DUP16 0x4E 0x2C 0x27 MSIZE 0x4D DUP8 0xC2 DUP15 0x24 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "117:1233:2:-:0;;;168:2;151:19;;201:9;;195:2;:15;;;;:::i;:::-;177:33;;117:1233;;;;;;;;;;;;7:180:3;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:285::-;2377:5;2401:23;2419:4;2401:23;:::i;:::-;2393:31;;2445:27;2463:8;2445:27;:::i;:::-;2433:39;;2491:104;2528:66;2518:8;2512:4;2491:104;:::i;:::-;2482:113;;2317:285;;;;:::o;117:1233:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_createFungus_213": {
									"entryPoint": 831,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_generateRandomData_249": {
									"entryPoint": 744,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createFungus_276": {
									"entryPoint": 517,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@fungi_154": {
									"entryPoint": 305,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fungusToOwner_158": {
									"entryPoint": 254,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerFungusCount_162": {
									"entryPoint": 493,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9514:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:3",
														"type": ""
													}
												],
												"src": "1025:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:3",
														"type": ""
													}
												],
												"src": "1157:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1681:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1697:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1691:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1653:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1663:6:3",
														"type": ""
													}
												],
												"src": "1611:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1812:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1829:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1822:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1822:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1850:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1869:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1874:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1850:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1784:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1789:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1800:11:3",
														"type": ""
													}
												],
												"src": "1716:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1950:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1959:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1954:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2019:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2044:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2049:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2040:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2040:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2063:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2068:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2059:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2059:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2053:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2053:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2033:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2033:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2033:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1980:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1983:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1977:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1991:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1993:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2002:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2005:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1998:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1993:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1973:3:3",
																"statements": []
															},
															"src": "1969:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2116:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2166:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2171:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2162:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2162:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2180:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2155:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2155:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2097:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2100:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2094:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:13:3"
															},
															"nodeType": "YulIf",
															"src": "2091:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1922:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1927:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1932:6:3",
														"type": ""
													}
												],
												"src": "1891:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2252:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2262:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2280:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2287:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2276:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2296:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2292:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2292:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2272:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2272:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2262:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2235:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2245:6:3",
														"type": ""
													}
												],
												"src": "2204:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2404:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2414:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2461:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2428:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2418:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2476:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2547:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2483:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2589:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2596:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2585:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2603:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2608:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2563:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2563:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2563:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2624:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2635:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2640:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2624:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2385:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2392:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2400:3:3",
														"type": ""
													}
												],
												"src": "2312:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2747:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2764:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2787:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2769:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2757:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2735:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2742:3:3",
														"type": ""
													}
												],
												"src": "2682:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:277:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2962:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2974:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2985:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2970:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2962:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3028:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3034:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3024:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3024:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2998:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3054:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3126:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3135:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3062:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3054:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3194:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3218:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3150:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3150:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2916:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2928:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2936:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2947:4:3",
														"type": ""
													}
												],
												"src": "2806:423:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3278:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3335:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3344:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3337:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3337:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3337:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3301:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3326:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3308:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3308:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3298:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3298:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3291:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:43:3"
															},
															"nodeType": "YulIf",
															"src": "3288:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3271:5:3",
														"type": ""
													}
												],
												"src": "3235:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3415:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3425:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3447:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3434:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3425:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3490:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3463:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3463:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3463:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3393:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3401:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3409:5:3",
														"type": ""
													}
												],
												"src": "3363:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3574:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3620:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3622:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3622:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3622:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3595:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3616:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3587:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:32:3"
															},
															"nodeType": "YulIf",
															"src": "3584:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3713:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3728:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3742:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3732:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3757:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3792:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3803:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3788:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3767:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3757:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3544:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3555:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3567:6:3",
														"type": ""
													}
												],
												"src": "3508:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3951:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3963:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3951:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4031:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4044:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4055:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4040:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3987:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3913:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3925:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3936:4:3",
														"type": ""
													}
												],
												"src": "3843:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4160:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4177:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4071:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4283:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4300:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4293:12:3"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "4194:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4406:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4426:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4416:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4416:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "4317:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4529:478:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4580:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4557:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4565:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4553:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4553:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4572:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4542:35:3"
															},
															"nodeType": "YulIf",
															"src": "4539:122:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4670:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4693:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4680:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4743:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "4745:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4745:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4745:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4715:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4712:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:30:3"
															},
															"nodeType": "YulIf",
															"src": "4709:117:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4835:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4851:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4847:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4835:8:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4918:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4920:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4920:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4920:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4897:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4905:4:3",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4893:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4893:17:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:32:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4913:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4876:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:41:3"
															},
															"nodeType": "YulIf",
															"src": "4873:128:3"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4496:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4504:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4512:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4522:6:3",
														"type": ""
													}
												],
												"src": "4454:553:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5099:443:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5145:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5147:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5147:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5147:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5120:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5116:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5141:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5112:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:32:3"
															},
															"nodeType": "YulIf",
															"src": "5109:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5238:297:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5253:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5284:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5295:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5280:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5280:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5267:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5257:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5345:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5347:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5347:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5347:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5317:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5325:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5314:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5314:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "5311:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5442:83:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5497:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5508:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5493:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5493:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5517:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5460:32:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:65:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5442:6:3"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5450:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5061:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5072:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5084:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5092:6:3",
														"type": ""
													}
												],
												"src": "5013:529:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5593:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5596:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5690:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5683:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5683:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5683:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5714:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5717:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5707:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5707:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5548:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5785:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5795:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5809:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5815:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5805:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5826:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5856:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5862:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5852:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5830:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5903:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5917:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5931:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5939:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5927:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5927:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5917:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5883:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:26:3"
															},
															"nodeType": "YulIf",
															"src": "5873:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6006:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6020:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6020:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6020:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5970:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5993:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6001:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5990:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5990:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5967:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5967:38:3"
															},
															"nodeType": "YulIf",
															"src": "5964:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5769:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5778:6:3",
														"type": ""
													}
												],
												"src": "5734:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6166:67:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6188:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6196:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6184:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6184:14:3"
																	},
																	{
																		"hexValue": "412066756e67757320616c72656164792065786973742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6200:25:3",
																		"type": "",
																		"value": "A fungus already exist."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:49:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6177:49:3"
														}
													]
												},
												"name": "store_literal_in_memory_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6158:6:3",
														"type": ""
													}
												],
												"src": "6060:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6385:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6395:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6461:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6466:2:3",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6402:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6567:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef",
																	"nodeType": "YulIdentifier",
																	"src": "6478:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6478:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6580:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6596:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6587:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6580:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6373:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6381:3:3",
														"type": ""
													}
												],
												"src": "6239:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6782:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6792:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6804:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6815:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6800:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6800:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6792:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6839:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6850:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6835:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6858:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6864:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6854:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6854:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6828:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6884:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7018:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6892:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6892:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6884:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6762:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6777:4:3",
														"type": ""
													}
												],
												"src": "6611:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7159:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7174:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7159:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7121:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7126:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7137:11:3",
														"type": ""
													}
												],
												"src": "7036:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7240:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7263:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7268:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7273:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7250:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7250:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7250:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7321:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7326:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7317:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7317:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7335:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7310:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7310:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7222:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7227:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7232:6:3",
														"type": ""
													}
												],
												"src": "7189:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7489:196:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7499:95:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7582:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7587:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7506:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:88:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7499:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "7628:5:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7635:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7640:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7604:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7604:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7604:43:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7656:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7667:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7672:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7663:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7656:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "7462:5:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7469:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7477:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7485:3:3",
														"type": ""
													}
												],
												"src": "7371:314:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7835:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7846:110:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7935:6:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7943:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7952:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7853:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7853:103:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7846:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7966:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7973:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7966:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7806:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7812:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7820:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7831:3:3",
														"type": ""
													}
												],
												"src": "7691:291:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8016:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8026:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8026:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8026:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8130:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8133:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8123:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8123:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8123:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8154:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8157:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8147:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8147:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8147:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7988:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8208:142:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8218:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8241:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8223:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8223:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8218:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8252:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8275:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8257:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8252:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8299:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8301:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8301:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8301:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8296:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8289:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:9:3"
															},
															"nodeType": "YulIf",
															"src": "8286:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8330:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8339:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8342:1:3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "8335:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8330:1:3"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8197:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8200:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8206:1:3",
														"type": ""
													}
												],
												"src": "8174:176:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8384:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8401:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8404:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8394:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8394:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8394:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8498:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8501:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8491:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8491:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8491:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8522:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8525:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8515:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8515:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8515:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8356:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8587:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8597:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8620:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8602:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8602:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8597:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8631:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8654:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8636:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8631:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8678:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8680:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8680:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8680:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8672:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8675:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8669:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:8:3"
															},
															"nodeType": "YulIf",
															"src": "8666:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8710:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8722:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8725:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8718:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8710:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8573:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8576:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8582:4:3",
														"type": ""
													}
												],
												"src": "8542:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8782:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8792:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8819:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8801:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8792:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8915:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8917:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8917:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8917:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8840:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8847:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8837:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8837:77:3"
															},
															"nodeType": "YulIf",
															"src": "8834:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8946:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8957:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8964:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8953:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8946:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8768:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8778:3:3",
														"type": ""
													}
												],
												"src": "8739:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9152:359:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9162:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9174:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9185:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9170:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9162:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9242:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9255:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9266:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9251:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9251:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9198:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9198:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9198:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9301:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9310:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9316:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9306:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9306:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:48:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9279:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9336:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9408:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9417:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9344:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9344:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9336:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9476:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9489:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9500:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9485:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9485:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9432:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9108:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9120:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9128:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9136:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9147:4:3",
														"type": ""
													}
												],
												"src": "8978:533:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef(memPtr) {\n\n        mstore(add(memPtr, 0), \"A fungus already exist.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0, value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e17f883146100515780636bdfcef914610081578063703b3d38146100b2578063b082ab77146100e2575b600080fd5b61006b60048036038101906100669190610588565b6100fe565b60405161007891906105f6565b60405180910390f35b61009b60048036038101906100969190610588565b610131565b6040516100a99291906106b9565b60405180910390f35b6100cc60048036038101906100c79190610715565b6101ed565b6040516100d99190610742565b60405180910390f35b6100fc60048036038101906100f791906107c2565b610205565b005b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061014157600080fd5b90600052602060002090600202016000915090508060000180546101649061083e565b80601f01602080910402602001604051908101604052809291908181526020018280546101909061083e565b80156101dd5780601f106101b2576101008083540402835291602001916101dd565b820191906000526020600020905b8154815290600101906020018083116101c057829003601f168201915b5050505050908060010154905082565b60046020528060005260406000206000915090505481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906108bc565b60405180910390fd5b600061029383836102e8565b90506102e383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508261033f565b505050565b60008083836040516102fb92919061091b565b604051809103902060001c90506000600154826103189190610963565b90506064816103279190610963565b8161033291906109c3565b9050809250505092915050565b60026040518060400160405280848152602001838152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019061039b9291906104a5565b50602082015181600101555050600060016002805490506103bc91906109c3565b9050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610460906109f7565b91905055507f2e946779390b27c50a2225bee0b9af13e0848034733330963e93cedb42487fd781848460405161049893929190610a40565b60405180910390a1505050565b8280546104b19061083e565b90600052602060002090601f0160209004810192826104d3576000855561051a565b82601f106104ec57805160ff191683800117855561051a565b8280016001018555821561051a579182015b828111156105195782518255916020019190600101906104fe565b5b509050610527919061052b565b5090565b5b8082111561054457600081600090555060010161052c565b5090565b600080fd5b600080fd5b6000819050919050565b61056581610552565b811461057057600080fd5b50565b6000813590506105828161055c565b92915050565b60006020828403121561059e5761059d610548565b5b60006105ac84828501610573565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105e0826105b5565b9050919050565b6105f0816105d5565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561064b578082015181840152602081019050610630565b8381111561065a576000848401525b50505050565b6000601f19601f8301169050919050565b600061067c82610611565b610686818561061c565b935061069681856020860161062d565b61069f81610660565b840191505092915050565b6106b381610552565b82525050565b600060408201905081810360008301526106d38185610671565b90506106e260208301846106aa565b9392505050565b6106f2816105d5565b81146106fd57600080fd5b50565b60008135905061070f816106e9565b92915050565b60006020828403121561072b5761072a610548565b5b600061073984828501610700565b91505092915050565b600060208201905061075760008301846106aa565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126107825761078161075d565b5b8235905067ffffffffffffffff81111561079f5761079e610762565b5b6020830191508360018202830111156107bb576107ba610767565b5b9250929050565b600080602083850312156107d9576107d8610548565b5b600083013567ffffffffffffffff8111156107f7576107f661054d565b5b6108038582860161076c565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061085657607f821691505b6020821081141561086a5761086961080f565b5b50919050565b7f412066756e67757320616c72656164792065786973742e000000000000000000600082015250565b60006108a660178361061c565b91506108b182610870565b602082019050919050565b600060208201905081810360008301526108d581610899565b9050919050565b600081905092915050565b82818337600083830152505050565b600061090283856108dc565b935061090f8385846108e7565b82840190509392505050565b60006109288284866108f6565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061096e82610552565b915061097983610552565b92508261098957610988610934565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ce82610552565b91506109d983610552565b9250828210156109ec576109eb610994565b5b828203905092915050565b6000610a0282610552565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a3557610a34610994565b5b600182019050919050565b6000606082019050610a5560008301866106aa565b8181036020830152610a678185610671565b9050610a7660408301846106aa565b94935050505056fea264697066735822122073f9c75126ae254028f0cd4fdad3c176b00b0121ed8f4e2c27594d87c28e248f64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE17F883 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6BDFCEF9 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x703B3D38 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xB082AB77 EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP3 SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x164 SWAP1 PUSH2 0x83E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x190 SWAP1 PUSH2 0x83E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27E SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x293 DUP4 DUP4 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E3 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x33F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP3 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST DUP2 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x39B SWAP3 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x460 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x2E946779390B27C50A2225BEE0B9AF13E0848034733330963E93CEDB42487FD7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x498 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x4B1 SWAP1 PUSH2 0x83E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x51A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x4EC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x51A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x51A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x519 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4FE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x527 SWAP2 SWAP1 PUSH2 0x52B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x52C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x565 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP2 EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x582 DUP2 PUSH2 0x55C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AC DUP5 DUP3 DUP6 ADD PUSH2 0x573 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP3 PUSH2 0x5B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5F0 DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x60B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x630 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67C DUP3 PUSH2 0x611 JUMP JUMPDEST PUSH2 0x686 DUP2 DUP6 PUSH2 0x61C JUMP JUMPDEST SWAP4 POP PUSH2 0x696 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x62D JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x660 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0x552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6D3 DUP2 DUP6 PUSH2 0x671 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6F2 DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x70F DUP2 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH2 0x72A PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x739 DUP5 DUP3 DUP6 ADD PUSH2 0x700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x757 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x782 JUMPI PUSH2 0x781 PUSH2 0x75D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x762 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x7BB JUMPI PUSH2 0x7BA PUSH2 0x767 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x548 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0x54D JUMP JUMPDEST JUMPDEST PUSH2 0x803 DUP6 DUP3 DUP7 ADD PUSH2 0x76C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x856 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x80F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x412066756E67757320616C72656164792065786973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A6 PUSH1 0x17 DUP4 PUSH2 0x61C JUMP JUMPDEST SWAP2 POP PUSH2 0x8B1 DUP3 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D5 DUP2 PUSH2 0x899 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x902 DUP4 DUP6 PUSH2 0x8DC JUMP JUMPDEST SWAP4 POP PUSH2 0x90F DUP4 DUP6 DUP5 PUSH2 0x8E7 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x928 DUP3 DUP5 DUP7 PUSH2 0x8F6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x96E DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x979 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x989 JUMPI PUSH2 0x988 PUSH2 0x934 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D9 DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9EC JUMPI PUSH2 0x9EB PUSH2 0x994 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 DUP3 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA35 JUMPI PUSH2 0xA34 PUSH2 0x994 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA55 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA67 DUP2 DUP6 PUSH2 0x671 JUMP JUMPDEST SWAP1 POP PUSH2 0xA76 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xF9C75126AE254028F0CD4FDAD3C176B00B0121ED DUP16 0x4E 0x2C 0x27 MSIZE 0x4D DUP8 0xC2 DUP15 0x24 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "117:1233:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;446:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1117:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;349:46;;;;;;;;;;;;;;;;;;;;;;:::o;290:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;446:49::-;;;;;;;;;;;;;;;;;:::o;1117:228::-;1219:1;1187:16;:28;1204:10;1187:28;;;;;;;;;;;;;;;;:33;1179:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1259:12;1274:25;1294:4;;1274:19;:25::i;:::-;1259:40;;1310:27;1324:4;;1310:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:7;1310:13;:27::i;:::-;1168:177;1117:228;;:::o;878:231::-;950:4;967:9;1000:4;;984:22;;;;;;;:::i;:::-;;;;;;;;979:28;;967:40;;1018:8;1036:10;;1029:4;:17;;;;:::i;:::-;1018:28;;1075:3;1069;:9;;;;:::i;:::-;1063:3;:15;;;;:::i;:::-;1057:21;;1096:3;1089:10;;;;878:231;;;;:::o;602:268::-;675:5;686:17;;;;;;;;693:4;686:17;;;;699:3;686:17;;;675:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;715:7;739:1;725:5;:12;;;;:15;;;;:::i;:::-;715:25;;771:10;751:13;:17;765:2;751:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;792:16;:28;809:10;792:28;;;;;;;;;;;;;;;;:30;;;;;;;;;:::i;:::-;;;;;;838:24;848:2;852:4;858:3;838:24;;;;;;;;:::i;:::-;;;;;;;;664:206;602:268;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:99::-;1663:6;1697:5;1691:12;1681:22;;1611:99;;;:::o;1716:169::-;1800:11;1834:6;1829:3;1822:19;1874:4;1869:3;1865:14;1850:29;;1716:169;;;;:::o;1891:307::-;1959:1;1969:113;1983:6;1980:1;1977:13;1969:113;;;2068:1;2063:3;2059:11;2053:18;2049:1;2044:3;2040:11;2033:39;2005:2;2002:1;1998:10;1993:15;;1969:113;;;2100:6;2097:1;2094:13;2091:101;;;2180:1;2171:6;2166:3;2162:16;2155:27;2091:101;1940:258;1891:307;;;:::o;2204:102::-;2245:6;2296:2;2292:7;2287:2;2280:5;2276:14;2272:28;2262:38;;2204:102;;;:::o;2312:364::-;2400:3;2428:39;2461:5;2428:39;:::i;:::-;2483:71;2547:6;2542:3;2483:71;:::i;:::-;2476:78;;2563:52;2608:6;2603:3;2596:4;2589:5;2585:16;2563:52;:::i;:::-;2640:29;2662:6;2640:29;:::i;:::-;2635:3;2631:39;2624:46;;2404:272;2312:364;;;;:::o;2682:118::-;2769:24;2787:5;2769:24;:::i;:::-;2764:3;2757:37;2682:118;;:::o;2806:423::-;2947:4;2985:2;2974:9;2970:18;2962:26;;3034:9;3028:4;3024:20;3020:1;3009:9;3005:17;2998:47;3062:78;3135:4;3126:6;3062:78;:::i;:::-;3054:86;;3150:72;3218:2;3207:9;3203:18;3194:6;3150:72;:::i;:::-;2806:423;;;;;:::o;3235:122::-;3308:24;3326:5;3308:24;:::i;:::-;3301:5;3298:35;3288:63;;3347:1;3344;3337:12;3288:63;3235:122;:::o;3363:139::-;3409:5;3447:6;3434:20;3425:29;;3463:33;3490:5;3463:33;:::i;:::-;3363:139;;;;:::o;3508:329::-;3567:6;3616:2;3604:9;3595:7;3591:23;3587:32;3584:119;;;3622:79;;:::i;:::-;3584:119;3742:1;3767:53;3812:7;3803:6;3792:9;3788:22;3767:53;:::i;:::-;3757:63;;3713:117;3508:329;;;;:::o;3843:222::-;3936:4;3974:2;3963:9;3959:18;3951:26;;3987:71;4055:1;4044:9;4040:17;4031:6;3987:71;:::i;:::-;3843:222;;;;:::o;4071:117::-;4180:1;4177;4170:12;4194:117;4303:1;4300;4293:12;4317:117;4426:1;4423;4416:12;4454:553;4512:8;4522:6;4572:3;4565:4;4557:6;4553:17;4549:27;4539:122;;4580:79;;:::i;:::-;4539:122;4693:6;4680:20;4670:30;;4723:18;4715:6;4712:30;4709:117;;;4745:79;;:::i;:::-;4709:117;4859:4;4851:6;4847:17;4835:29;;4913:3;4905:4;4897:6;4893:17;4883:8;4879:32;4876:41;4873:128;;;4920:79;;:::i;:::-;4873:128;4454:553;;;;;:::o;5013:529::-;5084:6;5092;5141:2;5129:9;5120:7;5116:23;5112:32;5109:119;;;5147:79;;:::i;:::-;5109:119;5295:1;5284:9;5280:17;5267:31;5325:18;5317:6;5314:30;5311:117;;;5347:79;;:::i;:::-;5311:117;5460:65;5517:7;5508:6;5497:9;5493:22;5460:65;:::i;:::-;5442:83;;;;5238:297;5013:529;;;;;:::o;5548:180::-;5596:77;5593:1;5586:88;5693:4;5690:1;5683:15;5717:4;5714:1;5707:15;5734:320;5778:6;5815:1;5809:4;5805:12;5795:22;;5862:1;5856:4;5852:12;5883:18;5873:81;;5939:4;5931:6;5927:17;5917:27;;5873:81;6001:2;5993:6;5990:14;5970:18;5967:38;5964:84;;;6020:18;;:::i;:::-;5964:84;5785:269;5734:320;;;:::o;6060:173::-;6200:25;6196:1;6188:6;6184:14;6177:49;6060:173;:::o;6239:366::-;6381:3;6402:67;6466:2;6461:3;6402:67;:::i;:::-;6395:74;;6478:93;6567:3;6478:93;:::i;:::-;6596:2;6591:3;6587:12;6580:19;;6239:366;;;:::o;6611:419::-;6777:4;6815:2;6804:9;6800:18;6792:26;;6864:9;6858:4;6854:20;6850:1;6839:9;6835:17;6828:47;6892:131;7018:4;6892:131;:::i;:::-;6884:139;;6611:419;;;:::o;7036:147::-;7137:11;7174:3;7159:18;;7036:147;;;;:::o;7189:154::-;7273:6;7268:3;7263;7250:30;7335:1;7326:6;7321:3;7317:16;7310:27;7189:154;;;:::o;7371:314::-;7485:3;7506:88;7587:6;7582:3;7506:88;:::i;:::-;7499:95;;7604:43;7640:6;7635:3;7628:5;7604:43;:::i;:::-;7672:6;7667:3;7663:16;7656:23;;7371:314;;;;;:::o;7691:291::-;7831:3;7853:103;7952:3;7943:6;7935;7853:103;:::i;:::-;7846:110;;7973:3;7966:10;;7691:291;;;;;:::o;7988:180::-;8036:77;8033:1;8026:88;8133:4;8130:1;8123:15;8157:4;8154:1;8147:15;8174:176;8206:1;8223:20;8241:1;8223:20;:::i;:::-;8218:25;;8257:20;8275:1;8257:20;:::i;:::-;8252:25;;8296:1;8286:35;;8301:18;;:::i;:::-;8286:35;8342:1;8339;8335:9;8330:14;;8174:176;;;;:::o;8356:180::-;8404:77;8401:1;8394:88;8501:4;8498:1;8491:15;8525:4;8522:1;8515:15;8542:191;8582:4;8602:20;8620:1;8602:20;:::i;:::-;8597:25;;8636:20;8654:1;8636:20;:::i;:::-;8631:25;;8675:1;8672;8669:8;8666:34;;;8680:18;;:::i;:::-;8666:34;8725:1;8722;8718:9;8710:17;;8542:191;;;;:::o;8739:233::-;8778:3;8801:24;8819:5;8801:24;:::i;:::-;8792:33;;8847:66;8840:5;8837:77;8834:103;;;8917:18;;:::i;:::-;8834:103;8964:1;8957:5;8953:13;8946:20;;8739:233;;;:::o;8978:533::-;9147:4;9185:2;9174:9;9170:18;9162:26;;9198:71;9266:1;9255:9;9251:17;9242:6;9198:71;:::i;:::-;9316:9;9310:4;9306:20;9301:2;9290:9;9286:18;9279:48;9344:78;9417:4;9408:6;9344:78;:::i;:::-;9336:86;;9432:72;9500:2;9489:9;9485:18;9476:6;9432:72;:::i;:::-;8978:533;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "548000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createFungus(string)": "infinite",
								"fungi(uint256)": "infinite",
								"fungusToOwner(uint256)": "2817",
								"ownerFungusCount(address)": "2836"
							},
							"internal": {
								"_createFungus(string memory,uint256)": "infinite",
								"_generateRandomData(string calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 168,
									"end": 170,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 151,
									"end": 170,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 170,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 201,
									"end": 210,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 210,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 195,
									"end": 197,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 195,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 210,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 195,
									"end": 210,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 210,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 195,
									"end": 210,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 195,
									"end": 210,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 210,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 177,
									"end": 210,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 210,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 3,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2377,
									"end": 2382,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 2419,
									"end": 2423,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 2401,
									"end": 2424,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2393,
									"end": 2424,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2393,
									"end": 2424,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2463,
									"end": 2471,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2445,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2472,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2472,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2528,
									"end": 2594,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2526,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2512,
									"end": 2516,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 2491,
									"end": 2595,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2482,
									"end": 2595,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2482,
									"end": 2595,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2317,
									"end": 2602,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1350,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073f9c75126ae254028f0cd4fdad3c176b00b0121ed8f4e2c27594d87c28e248f64736f6c634300080c0033",
									".code": [
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "E17F883"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "6BDFCEF9"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "703B3D38"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "B082AB77"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1350,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 349,
											"end": 395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 290,
											"end": 311,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 446,
											"end": 495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1214,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1215,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1220,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1179,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1274,
											"end": 1299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1274,
											"end": 1299,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1336,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1310,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 950,
											"end": 954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1004,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1006,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1007,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1063,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 870,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 602,
											"end": 870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 675,
											"end": 680,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 686,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 693,
											"end": 697,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 699,
											"end": 702,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 686,
											"end": 703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 715,
											"end": 722,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 730,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 725,
											"end": 737,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 725,
											"end": 737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 725,
											"end": 737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 725,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 725,
											"end": 740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 725,
											"end": 740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 725,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 725,
											"end": 740,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 740,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 725,
											"end": 740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 715,
											"end": 740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 715,
											"end": 740,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 771,
											"end": 781,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 751,
											"end": 764,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 768,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 768,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 819,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 792,
											"end": 820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 792,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 792,
											"end": 822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 792,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "2E946779390B27C50A2225BEE0B9AF13E0848034733330963E93CEDB42487FD7"
										},
										{
											"begin": 848,
											"end": 850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 852,
											"end": 856,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 858,
											"end": 861,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 838,
											"end": 862,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 862,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 838,
											"end": 862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 838,
											"end": 862,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 838,
											"end": 862,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 664,
											"end": 870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 870,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "66"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1891,
											"end": 2198,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1891,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1989,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 1990,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2069,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2071,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2047,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2008,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1993,
											"end": 2008,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1993,
											"end": 2008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1969,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2107,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2192,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2091,
											"end": 2192,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2169,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2192,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2091,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1940,
											"end": 2198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2198,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2204,
											"end": 2306,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2204,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2292,
											"end": 2299,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2306,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2306,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2428,
											"end": 2467,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2428,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2428,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2547,
											"end": 2553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2483,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2554,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2608,
											"end": 2614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2606,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2596,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2594,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2585,
											"end": 2601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2631,
											"end": 2670,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2676,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2800,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2682,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2787,
											"end": 2792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2769,
											"end": 2793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2769,
											"end": 2793,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2769,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2757,
											"end": 2794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2800,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2987,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 2983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 2988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2988,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3024,
											"end": 3044,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3045,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3062,
											"end": 3140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3062,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3062,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3150,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3218,
											"end": 3220,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3216,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3150,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3150,
											"end": 3222,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3150,
											"end": 3222,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3150,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 3229,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3357,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3235,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3301,
											"end": 3306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3333,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3357,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3434,
											"end": 3454,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3463,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3502,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3567,
											"end": 3573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3618,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3591,
											"end": 3614,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3619,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3622,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3584,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3801,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 3767,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3757,
											"end": 3820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3837,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3951,
											"end": 3977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4037,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3987,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3987,
											"end": 4058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3987,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 4065,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4071,
											"end": 4188,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4071,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4178,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4311,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4194,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4317,
											"end": 4434,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4317,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4424,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4416,
											"end": 4428,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4557,
											"end": 4563,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4553,
											"end": 4570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4576,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4539,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4539,
											"end": 4661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4580,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4539,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4539,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 4699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4680,
											"end": 4700,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4670,
											"end": 4700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4712,
											"end": 4742,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4826,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4709,
											"end": 4826,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4745,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4745,
											"end": 4824,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4745,
											"end": 4824,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4745,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 4826,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4709,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4864,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4835,
											"end": 4864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4909,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4897,
											"end": 4903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4883,
											"end": 4891,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4911,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 4917,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 5001,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4873,
											"end": 5001,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4920,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4920,
											"end": 4999,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4920,
											"end": 4999,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4920,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4873,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 5007,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5098,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5141,
											"end": 5143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5127,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5144,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5228,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5109,
											"end": 5228,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5147,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5147,
											"end": 5226,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5147,
											"end": 5226,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5147,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5228,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5109,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5267,
											"end": 5298,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5317,
											"end": 5323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5344,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5311,
											"end": 5428,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5311,
											"end": 5428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5311,
											"end": 5428,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5347,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5347,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5347,
											"end": 5426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5347,
											"end": 5426,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5347,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5311,
											"end": 5428,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5311,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5460,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5506,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5460,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5460,
											"end": 5525,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5525,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5460,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5525,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5238,
											"end": 5535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5542,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5728,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5548,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5673,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5697,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5690,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5722,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 6054,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5734,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5778,
											"end": 5784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5809,
											"end": 5813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5817,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5863,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5856,
											"end": 5860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 5864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5873,
											"end": 5954,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5943,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 5931,
											"end": 5937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5927,
											"end": 5944,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5954,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5873,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6001,
											"end": 6003,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5993,
											"end": 5999,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5990,
											"end": 6004,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5970,
											"end": 5988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6005,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5964,
											"end": 6048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5964,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5964,
											"end": 6048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5964,
											"end": 6048,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5964,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 6054,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 6054,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 6054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 6054,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6060,
											"end": 6233,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 6060,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6225,
											"name": "PUSH",
											"source": 3,
											"value": "412066756E67757320616C72656164792065786973742E000000000000000000"
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6060,
											"end": 6233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6060,
											"end": 6233,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6239,
											"end": 6605,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6239,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6466,
											"end": 6468,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 6461,
											"end": 6464,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6402,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6402,
											"end": 6469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6402,
											"end": 6469,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 6402,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6395,
											"end": 6469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6395,
											"end": 6469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6567,
											"end": 6570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6478,
											"end": 6571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6587,
											"end": 6599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6580,
											"end": 6599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6580,
											"end": 6599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6611,
											"end": 7030,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 6611,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6817,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6792,
											"end": 6818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6792,
											"end": 6818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6858,
											"end": 6862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6850,
											"end": 6851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6852,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6828,
											"end": 6875,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6892,
											"end": 7023,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6892,
											"end": 7023,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6892,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6884,
											"end": 7023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6884,
											"end": 7023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 7030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 7030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 7030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6611,
											"end": 7030,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7036,
											"end": 7183,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7189,
											"end": 7343,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7189,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7273,
											"end": 7279,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7263,
											"end": 7266,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7280,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 7335,
											"end": 7336,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7332,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7324,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7317,
											"end": 7333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7310,
											"end": 7337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7343,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7587,
											"end": 7593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7585,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7506,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 7506,
											"end": 7594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7506,
											"end": 7594,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7506,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7499,
											"end": 7594,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7499,
											"end": 7594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7604,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7640,
											"end": 7646,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7638,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7633,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7604,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 7604,
											"end": 7647,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7604,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7604,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7672,
											"end": 7678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7656,
											"end": 7679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7656,
											"end": 7679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7371,
											"end": 7685,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 7834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7952,
											"end": 7955,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7949,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7935,
											"end": 7941,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7853,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7853,
											"end": 7956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7853,
											"end": 7956,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7853,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 7956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7846,
											"end": 7956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7973,
											"end": 7976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7691,
											"end": 7982,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7988,
											"end": 8168,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 7988,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8133,
											"end": 8137,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8123,
											"end": 8138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8157,
											"end": 8161,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8147,
											"end": 8162,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8218,
											"end": 8243,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8218,
											"end": 8243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8257,
											"end": 8277,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8257,
											"end": 8277,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 8257,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8286,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 8286,
											"end": 8321,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8286,
											"end": 8321,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 8286,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8342,
											"end": 8343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8335,
											"end": 8344,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 8330,
											"end": 8344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8330,
											"end": 8344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8174,
											"end": 8350,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8356,
											"end": 8536,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8356,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8481,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8501,
											"end": 8505,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8498,
											"end": 8499,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8491,
											"end": 8506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8515,
											"end": 8530,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8582,
											"end": 8586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 8620,
											"end": 8621,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8597,
											"end": 8622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8636,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8654,
											"end": 8655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8636,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8636,
											"end": 8656,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8636,
											"end": 8656,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8636,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8631,
											"end": 8656,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8631,
											"end": 8656,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8669,
											"end": 8677,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8666,
											"end": 8700,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8666,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8666,
											"end": 8700,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8680,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8666,
											"end": 8700,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8666,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8718,
											"end": 8727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8542,
											"end": 8733,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8739,
											"end": 8972,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 8739,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8801,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8801,
											"end": 8825,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8801,
											"end": 8825,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8801,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8825,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8792,
											"end": 8825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8840,
											"end": 8845,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8837,
											"end": 8914,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8937,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8834,
											"end": 8937,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 8917,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8937,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8834,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8957,
											"end": 8962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8953,
											"end": 8966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 8966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8972,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8972,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9147,
											"end": 9151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9187,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 9174,
											"end": 9183,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9198,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9266,
											"end": 9267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9255,
											"end": 9264,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9251,
											"end": 9268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9242,
											"end": 9248,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9198,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 9198,
											"end": 9269,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9198,
											"end": 9269,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9198,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9316,
											"end": 9325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9310,
											"end": 9314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9306,
											"end": 9326,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9301,
											"end": 9303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9290,
											"end": 9299,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9279,
											"end": 9327,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 9344,
											"end": 9422,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9344,
											"end": 9422,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9344,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9336,
											"end": 9422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9336,
											"end": 9422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9432,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9500,
											"end": 9502,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9432,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 9432,
											"end": 9504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9432,
											"end": 9504,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9432,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8978,
											"end": 9511,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createFungus(string)": "b082ab77",
							"fungi(uint256)": "6bdfcef9",
							"fungusToOwner(uint256)": "0e17f883",
							"ownerFungusCount(address)": "703b3d38"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"newFungus\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createFungus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fungi\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fungusToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerFungusCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FungusFactory.sol\":\"FungusFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/FungusFactory.sol\":{\"keccak256\":\"0xd46a876d0096a62c066fac6d4b5f273d40dbd89359fb92b4783fcb5de872c843\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36647e09807c133bf1de66bb57a6005702bd1de5078f77ec5259182cd126b746\",\"dweb:/ipfs/QmRx4y2VY6uBzLCsS6qUbkC4RVxvRuzTUaDP3znRwGcNGF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 140,
								"contract": "contracts/FungusFactory.sol:FungusFactory",
								"label": "dnaDigits",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 145,
								"contract": "contracts/FungusFactory.sol:FungusFactory",
								"label": "dnaModulus",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 154,
								"contract": "contracts/FungusFactory.sol:FungusFactory",
								"label": "fungi",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Fungus)150_storage)dyn_storage"
							},
							{
								"astId": 158,
								"contract": "contracts/FungusFactory.sol:FungusFactory",
								"label": "fungusToOwner",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 162,
								"contract": "contracts/FungusFactory.sol:FungusFactory",
								"label": "ownerFungusCount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Fungus)150_storage)dyn_storage": {
								"base": "t_struct(Fungus)150_storage",
								"encoding": "dynamic_array",
								"label": "struct FungusFactory.Fungus[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Fungus)150_storage": {
								"encoding": "inplace",
								"label": "struct FungusFactory.Fungus",
								"members": [
									{
										"astId": 147,
										"contract": "contracts/FungusFactory.sol:FungusFactory",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 149,
										"contract": "contracts/FungusFactory.sol:FungusFactory",
										"label": "dna",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/FungusFactory.sol": {
				"ast": {
					"absolutePath": "contracts/FungusFactory.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"FungusFactory": [
							277
						],
						"Ownable": [
							112
						]
					},
					"id": 278,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 278,
							"sourceUnit": 113,
							"src": "61:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FungusFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 277,
							"linearizedBaseContracts": [
								277
							],
							"name": "FungusFactory",
							"nameLocation": "126:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "dnaDigits",
									"nameLocation": "156:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "151:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 138,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "151:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3134",
										"id": 139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "168:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_14_by_1",
											"typeString": "int_const 14"
										},
										"value": "14"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "dnaModulus",
									"nameLocation": "182:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "177:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "177:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 142,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "195:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"id": 143,
											"name": "dnaDigits",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 140,
											"src": "201:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "195:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "FungusFactory.Fungus",
									"id": 150,
									"members": [
										{
											"constant": false,
											"id": 147,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "251:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "244:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 146,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "244:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 149,
											"mutability": "mutable",
											"name": "dna",
											"nameLocation": "271:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 150,
											"src": "266:8:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 148,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "266:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Fungus",
									"nameLocation": "226:6:2",
									"nodeType": "StructDefinition",
									"scope": 277,
									"src": "219:63:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6bdfcef9",
									"id": 154,
									"mutability": "mutable",
									"name": "fungi",
									"nameLocation": "306:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "290:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Fungus_$150_storage_$dyn_storage",
										"typeString": "struct FungusFactory.Fungus[]"
									},
									"typeName": {
										"baseType": {
											"id": 152,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 151,
												"name": "Fungus",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 150,
												"src": "290:6:2"
											},
											"referencedDeclaration": 150,
											"src": "290:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Fungus_$150_storage_ptr",
												"typeString": "struct FungusFactory.Fungus"
											}
										},
										"id": 153,
										"nodeType": "ArrayTypeName",
										"src": "290:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Fungus_$150_storage_$dyn_storage_ptr",
											"typeString": "struct FungusFactory.Fungus[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e17f883",
									"id": 158,
									"mutability": "mutable",
									"name": "fungusToOwner",
									"nameLocation": "382:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "349:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 155,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "358:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "349:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "366:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "703b3d38",
									"id": 162,
									"mutability": "mutable",
									"name": "ownerFungusCount",
									"nameLocation": "479:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 277,
									"src": "446:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 161,
										"keyType": {
											"id": 159,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "455:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "446:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 160,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "466:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 170,
									"name": "newFungus",
									"nameLocation": "564:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "574:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "580:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 165,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "580:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "588:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "588:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:20:2"
									},
									"src": "558:36:2"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "664:206:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 181,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "693:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 182,
																	"name": "dna",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "699:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 180,
																"name": "Fungus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "686:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Fungus_$150_storage_ptr_$",
																	"typeString": "type(struct FungusFactory.Fungus storage pointer)"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "686:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fungus_$150_memory_ptr",
																"typeString": "struct FungusFactory.Fungus memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Fungus_$150_memory_ptr",
																"typeString": "struct FungusFactory.Fungus memory"
															}
														],
														"expression": {
															"id": 177,
															"name": "fungi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "675:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Fungus_$150_storage_$dyn_storage",
																"typeString": "struct FungusFactory.Fungus storage ref[] storage ref"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "675:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Fungus_$150_storage_$dyn_storage_ptr_$_t_struct$_Fungus_$150_storage_$returns$__$bound_to$_t_array$_t_struct$_Fungus_$150_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FungusFactory.Fungus storage ref[] storage pointer,struct FungusFactory.Fungus storage ref)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "675:29:2"
											},
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "720:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 212,
														"src": "715:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 186,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "715:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 188,
															"name": "fungi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "725:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Fungus_$150_storage_$dyn_storage",
																"typeString": "struct FungusFactory.Fungus storage ref[] storage ref"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "725:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "739:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "725:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "715:25:2"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 193,
															"name": "fungusToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "751:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 195,
														"indexExpression": {
															"id": 194,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "765:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "751:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 196,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "771:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "771:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "751:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "751:30:2"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "792:30:2",
													"subExpression": {
														"baseExpression": {
															"id": 200,
															"name": "ownerFungusCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "792:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 203,
														"indexExpression": {
															"expression": {
																"id": 201,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "809:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "809:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "792:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "792:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 207,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "848:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 208,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "852:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 209,
															"name": "dna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "858:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 206,
														"name": "newFungus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "838:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "EmitStatement",
												"src": "833:29:2"
											}
										]
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createFungus",
									"nameLocation": "611:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "639:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "625:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "625:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "dna",
												"nameLocation": "650:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "645:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:30:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:0:2"
									},
									"scope": 277,
									"src": "602:268:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "956:153:2",
										"statements": [
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "rand",
														"nameLocation": "972:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "967:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 220,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "967:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 227,
																			"name": "_str",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 215,
																			"src": "1000:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_calldata_ptr",
																				"typeString": "string calldata"
																			}
																		],
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "994:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 225,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "994:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "994:11:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 224,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "984:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "984:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "979:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 222,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "979:4:2",
															"typeDescriptions": {}
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "979:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "967:40:2"
											},
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "dna",
														"nameLocation": "1023:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "1018:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 232,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1018:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 234,
														"name": "rand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1029:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 235,
														"name": "dnaModulus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1036:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1029:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1018:28:2"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 238,
														"name": "dna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1057:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 239,
															"name": "dna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "1063:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "dna",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1069:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"hexValue": "313030",
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1075:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1069:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1063:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1057:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1057:21:2"
											},
											{
												"expression": {
													"id": 246,
													"name": "dna",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 233,
													"src": "1096:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 247,
												"nodeType": "Return",
												"src": "1089:10:2"
											}
										]
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomData",
									"nameLocation": "887:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_str",
												"nameLocation": "923:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "907:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "907:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:22:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "950:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "950:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:6:2"
									},
									"scope": 277,
									"src": "878:231:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "1168:177:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 255,
																	"name": "ownerFungusCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "1187:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 258,
																"indexExpression": {
																	"expression": {
																		"id": 256,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1204:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1204:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1187:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1219:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1187:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "412066756e67757320616c72656164792065786973742e",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1222:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef",
																"typeString": "literal_string \"A fungus already exist.\""
															},
															"value": "A fungus already exist."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ee64c52c9da0c9dfdd7db3cd8bea94d611a66f071b64d6a39f65273b9548aef",
																"typeString": "literal_string \"A fungus already exist.\""
															}
														],
														"id": 254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1179:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1179:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1179:69:2"
											},
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "randDna",
														"nameLocation": "1264:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 275,
														"src": "1259:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1259:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [
														{
															"id": 267,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1294:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 266,
														"name": "_generateRandomData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "1274:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$returns$_t_uint256_$",
															"typeString": "function (string calldata) view returns (uint256)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1274:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1259:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1324:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 272,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1329:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_createFungus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "1310:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "1310:27:2"
											}
										]
									},
									"functionSelector": "b082ab77",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFungus",
									"nameLocation": "1126:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1155:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "1139:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1139:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:22:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:2"
									},
									"scope": 277,
									"src": "1117:228:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 278,
							"src": "117:1233:2",
							"usedErrors": []
						}
					],
					"src": "33:1321:2"
				},
				"id": 2
			}
		}
	}
}